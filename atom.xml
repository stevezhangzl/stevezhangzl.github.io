<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SteveZhang博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-06T03:58:29.000Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>张龙</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue - 动画</title>
    <link href="http://example.com/2022/02/02/Vue-%E5%8A%A8%E7%94%BB/"/>
    <id>http://example.com/2022/02/02/Vue-%E5%8A%A8%E7%94%BB/</id>
    <published>2022-02-02T10:39:12.000Z</published>
    <updated>2022-02-06T03:58:29.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>在CSS过渡和动画中自动应用class</li><li>可以配合使用第三方CSS动画库，如Animate.css</li><li>在过渡钩子函数中使用JavaScript直接操作DOM</li><li>可以配合全名用第三方JavaScript动画库，如Velocity.js</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;在CSS过渡和动画中自动应用class&lt;/li&gt;
&lt;li&gt;可以配合使用第三方CSS动画库，如Animate.css&lt;/li&gt;
&lt;li&gt;在过渡钩子函数中使用JavaScript直接操作DOM&lt;/li&gt;
&lt;li&gt;可以配合全名用第三方JavaScript动画库，如Ve</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/02/02/hello-world/"/>
    <id>http://example.com/2022/02/02/hello-world/</id>
    <published>2022-02-02T08:29:10.000Z</published>
    <updated>2022-02-02T08:29:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Kotlin 单例object &amp; Kotlin和 Java 单例模式</title>
    <link href="http://example.com/2022/02/02/kotlin%20%E5%8D%95%E4%BE%8B/"/>
    <id>http://example.com/2022/02/02/kotlin%20%E5%8D%95%E4%BE%8B/</id>
    <published>2022-02-02T08:29:10.000Z</published>
    <updated>2022-02-06T21:15:59.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="单例object"><a href="#单例object" class="headerlink" title="单例object"></a>单例object</h2><h3 id="object的定义"><a href="#object的定义" class="headerlink" title="object的定义"></a>object的定义</h3><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span></span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> Singleton&#123;&#125;<span class="comment">//定义单例，类加载时实例化对象Singleton既是类名也是对象名  饿汉式——类一旦加载就马上初始化</span></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="访问object的成员"><a href="#访问object的成员" class="headerlink" title="访问object的成员"></a>访问object的成员</h3><h4 id="Kotlin-1"><a href="#Kotlin-1" class="headerlink" title="Kotlin"></a>Kotlin</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> Singleton&#123;</span><br><span class="line"> <span class="keyword">var</span> x:<span class="built_in">Int</span> = <span class="number">2</span></span><br><span class="line"> <span class="function"><span class="keyword">fun</span> <span class="title">y</span><span class="params">()</span></span>&#123;...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Singleton.x</span><br><span class="line">Singleton.y</span><br></pre></td></tr></table></figure><h4 id="Java-1"><a href="#Java-1" class="headerlink" title="Java"></a>Java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Singleton.INSTANCE.getX();</span><br><span class="line">Singleton.INSTANCE.setX(<span class="number">2</span>);</span><br><span class="line">Singleton.INSTANCE.y();</span><br></pre></td></tr></table></figure><h3 id="静态成员-JvmStatic"><a href="#静态成员-JvmStatic" class="headerlink" title="静态成员 @JvmStatic"></a>静态成员 @JvmStatic</h3><blockquote><p>kotlin中没有静态成员，想要模拟需要@JvmStatic 注解</p></blockquote><h4 id="Kotlin-2"><a href="#Kotlin-2" class="headerlink" title="Kotlin"></a>Kotlin</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> Singleton&#123;</span><br><span class="line"> <span class="meta">@JvmStatic</span> <span class="keyword">var</span> x:<span class="built_in">Int</span> = <span class="number">2</span></span><br><span class="line"> <span class="meta">@JvmStatic</span> <span class="function"><span class="keyword">fun</span> <span class="title">y</span><span class="params">()</span></span>&#123;...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Singleton.x</span><br><span class="line">Singleton.y()</span><br></pre></td></tr></table></figure><h4 id="Java-2"><a href="#Java-2" class="headerlink" title="Java"></a>Java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Singleton.getX();</span><br><span class="line">Singleton.setX(<span class="number">2</span>);</span><br><span class="line">Singleton.y();</span><br></pre></td></tr></table></figure><blockquote><p>object的成员直接按照Java静态成员生成字节码，对Kotlin内部使用无任何影响，Java调用object成员可直接视同调用静态成员一般。</p></blockquote><h3 id="不生成getter-x2F-setter-JvmField"><a href="#不生成getter-x2F-setter-JvmField" class="headerlink" title="不生成getter&#x2F;setter @JvmField"></a>不生成getter&#x2F;setter @JvmField</h3><h4 id="Kotlin-3"><a href="#Kotlin-3" class="headerlink" title="Kotlin"></a>Kotlin</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> Singleton&#123;</span><br><span class="line"> <span class="meta">@JvmField</span> <span class="keyword">var</span> x:<span class="built_in">Int</span> = <span class="number">2</span></span><br><span class="line"> <span class="meta">@JvmField</span> <span class="function"><span class="keyword">fun</span> <span class="title">y</span><span class="params">()</span></span>&#123;...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Singleton.x</span><br><span class="line">Singleton.y()</span><br></pre></td></tr></table></figure><blockquote><p>这里object 会生成静态的，如果不是object 其实不会生成静态的</p></blockquote><h4 id="Java-3"><a href="#Java-3" class="headerlink" title="Java"></a>Java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Singleton.x; <span class="comment">//属性x不生成getter/setter 访问方式等同于java field</span></span><br><span class="line">Singleton.y();</span><br></pre></td></tr></table></figure><h3 id="普通类的静态成员"><a href="#普通类的静态成员" class="headerlink" title="普通类的静态成员"></a>普通类的静态成员</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span>&#123;</span><br><span class="line"> <span class="meta">@JvmStatic</span> <span class="function"><span class="keyword">fun</span> <span class="title">y</span><span class="params">()</span></span>&#123;&#125; <span class="comment">//Only members in named ojbects and companion objects can be annotated with &#x27;@JvmStatic&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Kotlin-4"><a href="#Kotlin-4" class="headerlink" title="Kotlin"></a>Kotlin</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span>&#123;</span><br><span class="line"> <span class="keyword">companion</span> <span class="keyword">object</span>&#123;</span><br><span class="line">  <span class="meta">@JvmStatic</span> <span class="function"><span class="keyword">fun</span> <span class="title">y</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Java-4"><a href="#Java-4" class="headerlink" title="Java"></a>Java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">y</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span>&#123;</span><br><span class="line">  <span class="meta">@JvmField</span> <span class="keyword">var</span> x:<span class="built_in">Int</span> = <span class="number">2</span> <span class="comment">// 生成非静态的Field  不带getter/setter的写法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Kotlin和-Java-单例模式"><a href="#Kotlin和-Java-单例模式" class="headerlink" title="Kotlin和 Java 单例模式"></a>Kotlin和 Java 单例模式</h2><p>饿汉式</p><p>空间换时间</p><p>Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton1Java</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Singleton1Java INSTANCE = <span class="keyword">new</span> Singleton1Java();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton1Java <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Kotlin</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">object</span> Singleton1Kotlin &#123;&#125;</span><br></pre></td></tr></table></figure><p>Kotlin to Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton1Kotlin</span> </span>&#123;</span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton1Kotlin INSTANCE = <span class="keyword">new</span> Singleton1Kotlin();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton1Kotlin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>懒汉式</p><p>时间换空间</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;单例object&quot;&gt;&lt;a href=&quot;#单例object&quot; class=&quot;headerlink&quot; title=&quot;单例object&quot;&gt;&lt;/a&gt;单例object&lt;/h2&gt;&lt;h3 id=&quot;object的定义&quot;&gt;&lt;a href=&quot;#object的定义&quot; class=&quot;headerlink&quot; title=&quot;object的定义&quot;&gt;&lt;/a&gt;object的定义&lt;/h3&gt;&lt;h4 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;Java&lt;/h4&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Singleton&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Singleton INSTANCE = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Singleton();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&quot;Kotlin&quot;&gt;&lt;a href=&quot;#Kotlin&quot; class=&quot;headerlink&quot; title=&quot;Kotlin&quot;&gt;&lt;/a&gt;Kotlin&lt;/h4&gt;&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; Singleton&amp;#123;&amp;#125;&lt;span class=&quot;comment&quot;&gt;//定义单例，类加载时实例化对象Singleton既是类名也是对象名  饿汉式——类一旦加载就马上初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
